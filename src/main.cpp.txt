#include <Arduino.h>

#include "ESP32Console.h"
#include "strings.h"
#include "baik.h"

using namespace ESP32Console;

Console console;

constexpr int LED = 2;

int baik(int argc, char **argv)
{
    //Ensure that we have an argument to parse
    if (argc != 2)
    {
        printf("You have to give 'on' or 'off' as a argument (e.g. 'baik on')\n");
        
        //Return EXIT_FAILURE if something did not worked.
        return EXIT_FAILURE;
    }
    struct baik *baik = baik_create();
    baik_err_t err = BAIK_OK;
    baik_val_t res = 0;

    if (err == BAIK_OK)
    {
        if (res == 0)
            baik_exec(baik, "tulis('hello')", NULL);
    }
    else
    {
        baik_print_error(baik, stdout, NULL, 1);
    }

    baik_destroy(baik);
    //Return EXIT_SUCCESS if everything worked as intended.
    return EXIT_SUCCESS;
}

void setup()
{
    //pinMode(LED, OUTPUT);

    //You can change the console prompt before calling begin(). By default it is "ESP32>"
    //console.setPrompt("MyConsole> ");

    //You can change the baud rate and pin numbers similar to Serial.begin() here.
    console.begin(115200);

    //Register builtin commands like 'reboot', 'sysinfo', or 'meminfo'
    //console.registerSystemCommands();

    //Register our own command
    //First argument is the name with which the command can be executed, second argument is the function to execute and third one is the description shown in help command.
    console.registerCommand(ConsoleCommand("baik", &baik, "Baik lang"));

    //With ConsoleCommandD you can use lambda functions (and anything else that can be cast to std::function). This needs a bit more memory and CPU time than the normal ConsoleCommand.
    // console.registerCommand(ConsoleCommandD("test", [](int argc, char **argv) -> int {
    //     printf("Lambda function test\n");
    //     return EXIT_SUCCESS;
    // }, "Just a test command!"));

    //When console is in use, we can not use Serial.print but you can use printf to output text
    //printf("\n\nWelcome to ESP32Console example. Try out typing 'led off' and 'led on' (without quotes) or see 'help' for all commands.");
}

void loop()
{
    //Console works async in its own task, so you can do whatever you want in your loop() function.
}